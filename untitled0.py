# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14vwPvodJe9Fb0AKP8pHuYbz83CKJgOB5
"""

# prompt: import streamlit as st
# import openai
# # ✅ OpenAI APIキー（環境変数で管理するか直書き）
# openai.api_key = "your-api-key-here"  # ←ここを自分のAPIキーに変更！
# # タイトル
# st.title("🧠 GPT言い訳ジェネレーター")
# st.write("状況を入力すると、GPTが “最も納得されやすい言い訳” を自動で考えます。")
# # 入力フォーム
# situation = st.text_area("❓ どんな言い訳を考えてほしい？（例：バイトを休みたいけどサボりたい）")
# # 文体選択
# tone = st.selectbox("🗣️ 文体の指定", ["敬語（丁寧）", "タメ口（フランク）", "どっちでも"])
# # 実行ボタン
# if st.button("GPTに言い訳を相談！") and situation.strip() != "":
#     with st.spinner("言い訳を考え中…"):
#         # プロンプト生成
#         prompt = f"""
# あなたは“言い訳を考えるプロ”です。以下の状況に対して、納得されやすく、自然でバレにくい言い訳を1つ考えてください。
# 【状況】{situation}
# 【希望の文体】{tone}
# ※シンプルで自然に、でもちょっと笑えるくらい絶妙な言い訳を出してください。
# """
#         # OpenAI API呼び出し
#         response = openai.ChatCompletion.create(
#             model="gpt-4",
#             messages=[
#                 {"role": "user", "content": prompt}
#             ],
#             max_tokens=300,
#             temperature=0.9,
#         )
#         # 出力表示
#         excuse = response['choices'][0]['message']['content'].strip()
#         st.subheader("💬 GPTが考えた最強の言い訳：")
#         st.success(excuse)

!pip install streamlit openai
!wget https://raw.githubusercontent.com/streamlit/streamlit/main/lib/streamlit/web/bootstrap.py

import streamlit as st
import openai
import subprocess
import os

# ✅ OpenAI APIキー（環境変数で管理するか直書き）
# It's highly recommended to manage your API key more securely,
# e.g., using environment variables or Colab secrets.
openai.api_key = os.environ.get("OPENAI_API_KEY", "your-api-key-here") # Replace with your API key or use environment variable

# Create a dummy file for the Streamlit script
with open("streamlit_app.py", "w") as f:
    f.write("""
import streamlit as st
import openai
import os

# ✅ OpenAI APIキー（環境変数で管理するか直書き）
openai.api_key = os.environ.get("OPENAI_API_KEY", "your-api-key-here") # Replace with your API key or use environment variable


# タイトル
st.title("🧠 GPT言い訳ジェネレーター")
st.write("状況を入力すると、GPTが “最も納得されやすい言い訳” を自動で考えます。")

# 入力フォーム
situation = st.text_area("❓ どんな言い訳を考えてほしい？（例：バイトを休みたいけどサボりたい）")

# 文体選択
tone = st.selectbox("🗣️ 文体の指定", ["敬語（丁寧）", "タメ口（フランク）", "どっちでも"])

# 実行ボタン
if st.button("GPTに言い訳を相談！") and situation.strip() != "":
    if openai.api_key == "your-api-key-here" or openai.api_key is None:
        st.error("Please replace 'your-api-key-here' with your actual OpenAI API key or set the OPENAI_API_KEY environment variable.")
    else:
        with st.spinner("言い訳を考え中…"):
            try:
                # プロンプト生成
                prompt = f\"\"\"
あなたは“言い訳を考えるプロ”です。以下の状況に対して、納得されやすく、自然でバレにくい言い訳を1つ考えてください。
【状況】{situation}
【希望の文体】{tone}
※シンプルで自然に、でもちょっと笑えるくらい絶妙な言い訳を出してください。
\"\"\"
                # OpenAI API呼び出し
                response = openai.ChatCompletion.create(
                    model="gpt-4", # You might need to change the model based on availability and cost
                    messages=[
                        {"role": "user", "content": prompt}
                    ],
                    max_tokens=300,
                    temperature=0.9,
                )
                # 出力表示
                excuse = response['choices'][0]['message']['content'].strip()
                st.subheader("💬 GPTが考えた最強の言い訳：")
                st.success(excuse)
            except Exception as e:
                st.error(f"An error occurred: {e}")

""")


# Run Streamlit
# You might need to adjust the command based on your environment
try:
    # This command runs streamlit as a background process.
    # You'll need to click the link provided in the output to access the app.
    # Make sure to stop the cell execution when you are done.
    process = subprocess.Popen(['streamlit', 'run', 'streamlit_app.py', '--server.port', '8501'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Read the output to get the public URL
    for line in iter(process.stdout.readline, b''):
        print(line.decode('utf-8'), end='')
        if "External URL:" in line.decode('utf-8'):
            break # Stop reading output once the URL is found

except Exception as e:
    print(f"Error running Streamlit: {e}")
    print("Please ensure you have replaced 'your-api-key-here' with a valid OpenAI API key.")

# Note: To interact with the Streamlit app, you will need to use ngrok or a similar service
# to expose the port 8501 if you are running this in a cloud environment without direct port forwarding.
# In Google Colab, after running this cell, look for the "External URL" in the output and click it.
# If you don't see the URL, you might need to manually set up port forwarding (e.g., using ngrok).
# A common way to use ngrok in Colab is:
# !wget https://bin.equinox.io/c/4VmDwCvkvbG/ngrok-stable-linux-amd64.zip
# !unzip ngrok-stable-linux-amd64.zip
# get_ipython().system_raw('./ngrok http 8501 &')
# !curl -s http://localhost:4040/api/tun/http | python3 -c 'import json, sys; j=json.load(sys.stdin); print(j["tunnels"][0]["public_url"])'
# Then use the URL provided by the curl command.

# Make sure to terminate the cell execution (click the stop button) when you are finished
# with the Streamlit application to release resources.